import XMonad

import XMonad.Layout.Tabbed
import XMonad.Layout.Accordion
import XMonad.Layout.NoBorders

import XMonad.Actions.CycleWS
import qualified Data.Map as M

main = xmonad $ defaultConfig { layoutHook = noBorders $  layoutHook defaultConfig
 					, modMask = mod4Mask 
					, keys          = \c -> mykeys c `M.union` keys defaultConfig c

	}
	where mykeys (XConfig {modMask = modm}) = M.fromList $
        	[ ((modm , xK_x), spawn "xlock") 
		, ((modm,               xK_Right),  nextWS)
		, ((modm,               xK_Left),    prevWS) ]
